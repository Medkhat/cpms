stages:
- build-and-dockerize
- deploy

build-and-dockerize-stage:
  only:
    refs:
    - stage
  stage: build-and-dockerize
  before_script:
  - wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash #install nvm
  - export NVM_DIR="$HOME/.nvm" && . "$NVM_DIR/nvm.sh" --no-use #load nvm
  - eval "[ -f .nvmrc ] && nvm install || nvm install stable" #install node
  - nvm use v14.17.6
  - node -v
  script:
  - npm install
  - npm run build
  - rm -rf deployment/stage/nginx/www/html/*
  - mv build/* deployment/stage/nginx/www/html/
  - nvm use default
  - cd deployment/stage/
  - docker-compose build
  - docker login "https://harbor.technodom.kz" -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD
  - docker tag technodom-cpms-ui:stage harbor.technodom.kz/cpms/technodom-cpms-ui:stage
  - docker push harbor.technodom.kz/cpms/technodom-cpms-ui:stage

deploy-stage:
  only:
    refs:
    - stage
  stage: deploy
  script:
  - cd deployment/stage/
  - kubectl config use-context cpms-user-stage-context
  - kubectl delete  deployments --ignore-not-found=true technodom-cpms-ui-deployment
  - kubectl apply -f technodom-cpms-deployment-ui.yaml
